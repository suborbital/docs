"use strict";(self.webpackChunksuborbital_docs=self.webpackChunksuborbital_docs||[]).push([[7373],{3905:function(t,e,r){r.d(e,{Zo:function(){return c},kt:function(){return p}});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},l=Object.keys(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=n.createContext({}),u=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},c=function(t){var e=u(t.components);return n.createElement(s.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,l=t.originalType,s=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),m=u(r),p=a,b=m["".concat(s,".").concat(p)]||m[p]||d[p]||l;return r?n.createElement(b,o(o({ref:e},c),{},{components:r})):n.createElement(b,o({ref:e},c))}));function p(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8701:function(t,e,r){r.r(e),r.d(e,{assets:function(){return c},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return d}});var n=r(7462),a=r(3366),l=(r(7294),r(3905)),o=["components"],i={},s="Glossary",u={unversionedId:"suborbital-ecosystem/glossary",id:"suborbital-ecosystem/glossary",title:"Glossary",description:"| Term                                     | Definition                                                                                                                                                                                                                                                                                      | Other form(s)              |",source:"@site/docs/suborbital-ecosystem/glossary.md",sourceDirName:"suborbital-ecosystem",slug:"/suborbital-ecosystem/glossary",permalink:"/docs/laura/add-wasm-ed-links/suborbital-ecosystem/glossary",editUrl:"https://github.com/suborbital/docs/edit/main/website/docs/suborbital-ecosystem/glossary.md",tags:[],version:"current",lastUpdatedAt:1650469678,formattedLastUpdatedAt:"4/20/2022",frontMatter:{},sidebar:"docs",previous:{title:"The Suborbital Ecosystem",permalink:"/docs/laura/add-wasm-ed-links/suborbital-ecosystem/the-suborbital-ecosystem"},next:{title:"Intro to WebAssembly",permalink:"/docs/laura/add-wasm-ed-links/intro-to-webassembly/intro-to-wasm"}},c={},d=[],m={toc:d};function p(t){var e=t.components,r=(0,a.Z)(t,o);return(0,l.kt)("wrapper",(0,n.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"glossary"},"Glossary"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Term"),(0,l.kt)("th",{parentName:"tr",align:null},"Definition"),(0,l.kt)("th",{parentName:"tr",align:null},"Other form(s)"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WebAssembly"),(0,l.kt)("td",{parentName:"tr",align:null},"A binary instruction format, designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications."),(0,l.kt)("td",{parentName:"tr",align:null},"Wasm")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"WASI"),(0,l.kt)("td",{parentName:"tr",align:null},"The WebAssembly System Interface, an API designed by the Wasmtime project that provides Wasm modules with access to several operating-system-like features, including files and filesystems, Berkeley sockets, clocks, and random numbers"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/laura/add-wasm-ed-links/atmo/concepts/runnables"},"Runnable")),(0,l.kt)("td",{parentName:"tr",align:null},"A Runnable can be written in any of the supported languages (such as TypeScript, Rust or Swift), and is compiled to WebAssembly when you build it."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/laura/add-wasm-ed-links/atmo/concepts/the-directive"},"The Directive")),(0,l.kt)("td",{parentName:"tr",align:null},"A declarative file that allows you to describe your application's business logic. By describing your application declaratively, you can avoid all of the boilerplate code that normally comes with building a web service such as binding to ports, setting up TLS, constructing a router, etc."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/laura/add-wasm-ed-links/atmo/usage/creating-handlers"},"Handler")),(0,l.kt)("td",{parentName:"tr",align:null},"Each handler tells Atmo how to handle a resource. A resource is an input that Atmo makes available via HTTP endpoints, event handlers, and more. To start, Atmo supports handlers for HTTP requests, particulary designed to help building web APIs. Handlers are declared in the directive."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/laura/add-wasm-ed-links/atmo/usage/build-your-application"},"Bundle")),(0,l.kt)("td",{parentName:"tr",align:null},"A Bundle is a .wasm.zip file that includes your Directive, along with all of your Runnables compiled to WebAssembly modules. Bundles are built using subo."),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Building Blocks"),(0,l.kt)("td",{parentName:"tr",align:null},"The projects that are used to build Atmo (Reactr, Vektor, Grav)"),(0,l.kt)("td",{parentName:"tr",align:null},"RVG")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"FFI"),(0,l.kt)("td",{parentName:"tr",align:null},"The concept of two different programming languages calling functions that one another have exposed; this is how Runnable WebAssembly modules communicate with Reactr/Atmo"),(0,l.kt)("td",{parentName:"tr",align:null},"Foreign Function Interface")))))}p.isMDXComponent=!0}}]);
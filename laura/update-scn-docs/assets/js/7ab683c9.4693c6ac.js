"use strict";(self.webpackChunksuborbital_docs=self.webpackChunksuborbital_docs||[]).push([[8032],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,m=p["".concat(s,".").concat(b)]||p[b]||d[b]||i;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7505:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={},l="Building Sat",o={unversionedId:"sat/building-sat",id:"sat/building-sat",title:"Building Sat",description:"Build the Sat Docker image",source:"@site/docs/sat/building-sat.md",sourceDirName:"sat",slug:"/sat/building-sat",permalink:"/docs/laura/update-scn-docs/sat/building-sat",draft:!1,editUrl:"https://github.com/suborbital/docs/edit/main/website/docs/sat/building-sat.md",tags:[],version:"current",lastUpdatedAt:1645993708,formattedLastUpdatedAt:"Feb 27, 2022",frontMatter:{},sidebar:"docs",previous:{title:"Using Sat",permalink:"/docs/laura/update-scn-docs/sat/using-sat"},next:{title:"Constellations",permalink:"/docs/laura/update-scn-docs/sat/constellations"}},s={},u=[{value:"Build the Sat Docker image",id:"build-the-sat-docker-image",level:2},{value:"Build the Sat binary",id:"build-the-sat-binary",level:2}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"building-sat"},"Building Sat"),(0,r.kt)("h2",{id:"build-the-sat-docker-image"},"Build the Sat Docker image"),(0,r.kt)("p",null,"If you'd like to build Sat yourself, clone ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/suborbital/sat"},"the Sat repo")," and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# On M1 Macs, you may need to run `export DOCKER_BUILDKIT=0`\nmake docker run\n")),(0,r.kt)("p",null,"This will build the ",(0,r.kt)("inlineCode",{parentName:"p"},"suborbital/sat:dev")," Docker image and then launch it using the ",(0,r.kt)("inlineCode",{parentName:"p"},"hello-echo")," example module."),(0,r.kt)("h2",{id:"build-the-sat-binary"},"Build the Sat binary"),(0,r.kt)("p",null,"To build Sat as a binary, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make sat\n")),(0,r.kt)("p",null,"The binary will be put in ",(0,r.kt)("inlineCode",{parentName:"p"},".bin"),"."),(0,r.kt)("p",null,"To build a statically compiled Sat binary, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make sat/static\n")),(0,r.kt)("p",null,"Static linking is not available on Mac."))}d.isMDXComponent=!0}}]);